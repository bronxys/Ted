const fs = require('fs');

const frasesEngracadas = [
  "ü§ñ Anti-bot ativado. Alvo identificado e bloqueado.",
  "üõë Botzinho de rodovi√°ria detectado. Pr√≥xima parada: o ban!",
  "üóëÔ∏è Esse bot veio direto da lixeira do Windows 95.",
  "üö´ Bot com alma de spam bloqueado com sucesso.",
  "üîå Bot sem tomada. Vai desligar no susto!",
  "üß† Intelig√™ncia artificial? Isso a√≠ √© burrice automatizada.",
  "üíÄ Esse bot √© mais in√∫til que antiv√≠rus vencido.",
  "üßΩ Faxina digital em andamento: bot removido com desonra.",
  "üë¢ Bot chutado sem nem dizer tchau.",
  "üîí Tentou invadir, mas esqueceu que aqui tem cadeado de verdade.",
  "üêç Bot rastejante detectado. Mata na chinelada virtual.",
  "üí£ Bot eliminado com precis√£o cir√∫rgica e ironia.",
  "üìõ Esse bot n√£o serve nem pra spam de farm√°cia.",
  "üì¥ Desligando bot. Motivo: vergonha alheia demais.",
  "üßØ Apaga esse bot antes que contamine o grupo.",
  "üï≥Ô∏è Bot jogado no buraco do esquecimento digital.",
  "ü•¥ Bot t√£o fake que at√© a mentira ficou constrangida.",
  "üõ†Ô∏è Bot montado com pe√ßa de impressora velha.",
  "üöø Banho de firewall nesse bot fedorento.",
  "üé≠ Disfarce de humano: nota 2/10. Bot √≥bvio demais.",
  "üß¨ DNA de bot detectado: gene 100% spammer.",
  "ü¶† Bot com v√≠rus social. Quarentena instant√¢nea.",
  "üí© Esse bot fede a c√≥digo mal feito e inten√ß√£o ruim.",
  "üëΩ Esse bot veio do espa√ßo... mas sem atualiza√ß√£o.",
  "üéÆ Bot de fase 1 querendo entrar no chef√£o. Que d√≥.",
  "üìº Bot retr√¥? Parece ter sa√≠do direto de um disquete!",
  "üê∏ Esse bot coaxou alto demais. Ban nele.",
  "üì° Sinal do bot fraco. Nem o Wi-Fi quer se conectar.",
  "üßä Bot congelado por falta de gra√ßa e carisma.",
  "üí§ Bot dormindo no ponto. Foi banido enquanto sonhava.",
  "üéØ Bot mirou no grupo e acertou o limbo.",
  "üß® Explos√£o de vergonha: bot auto-destruiu de tanto cringe.",
  "üì¨ Bot entregando spam desde 2007.",
  "ü•∑ Bot ninja... mas sem talento e sem stealth.",
  "üîé Investigamos o bot e s√≥ achamos decep√ß√£o.",
  "üê¢ Bot lento, fraco, sem prop√≥sito. Adeus.",
  "üîß Bot quebrado tentando se passar por gente. Risos.",
  "üßü‚Äç‚ôÇÔ∏è Bot zumbi do WhatsApp. Aqui n√£o tem c√©rebro pra voc√™.",
  "üìâ Utilidade do bot: abaixo de zero. Banimento merecido.",
  "üß± Bot bateu na parede do bom senso e quebrou a cara."
];

if (!global.botDetectionCache) {
  global.botDetectionCache = new Map();
}

const comandosNegros = ['crash', 'spam', 'nuke', 'lag', 'bug', 'exploit', 'attack', 'ddos'];

function tipoDispositivo(messageId) {
  if (!messageId) return 'desconhecido';
  const tipoId = messageId.length;

  return tipoId === 32 ? 'Android'
       : tipoId === 20 ? 'iPhone'
       : tipoId === 22 ? 'WhatsApp Web (bot)'
       : tipoId === 16 ? 'Baileys (Bot)'
       : tipoId === 18 ? 'WhatsApp Desktop (bot)'
       : 'Desconhecido';
}

function contemComandoNegro(texto) {
  if (!texto) return false;
  const palavras = texto.toLowerCase().split(/\s+/);
  return comandosNegros.some(cmd => palavras.includes(cmd));
}

async function verificarBots(info, from, sender, isGroup, isAntibot, isAdminFunc, tednexmart, fs, selo, donoBot) {
  if (!isGroup || !info.message || !isAntibot) return;

  const messageId = info.key.id;
  const texto = info.message.conversation 
              || info.message.extendedTextMessage?.text 
              || info.message.imageMessage?.caption 
              || '';

  const dispositivo = tipoDispositivo(messageId);
  const isComandoNegro = contemComandoNegro(texto);

  const tipoId = messageId.length;
  const suspeitoBot = (tipoId === 16 || tipoId === 18 || tipoId === 22) || isComandoNegro;

  if (!suspeitoBot) return;

  const cacheKey = `${from}_${sender}`;
  if (global.botDetectionCache.has(cacheKey)) return;
  global.botDetectionCache.set(cacheKey, true);
  setTimeout(() => global.botDetectionCache.delete(cacheKey), 60000);

  const isUserAdmin = await isAdminFunc(from, sender);
  const ehDono = sender === donoBot;

  // Se for dono ou admin, simplesmente n√£o faz nada
  if (ehDono || isUserAdmin) {
    return;
  }

  try {
    if (Math.random() < 0.3) {
      const frase = frasesEngracadas[Math.floor(Math.random() * frasesEngracadas.length)];
      await tednexmart.sendMessage(from, { text: frase });
    }

    await tednexmart.sendMessage(from, {
      text: `üö® @${sender.split('@')[0]} foi identificado como *bot ou spammer*. Executando remo√ß√£o!`,
      mentions: [sender]
    });

    const audioPath = "/home/container/database/audios/fake.mp3";
    if (fs.existsSync(audioPath)) {
      const audio = fs.readFileSync(audioPath);
      await tednexmart.sendMessage(from, {
        audio,
        mimetype: 'audio/mpeg',
        ptt: true
      }, { quoted: selo });
    }

    await new Promise(resolve => setTimeout(resolve, 1500));
    await tednexmart.groupParticipantsUpdate(from, [sender], 'remove');

  } catch (err) {
    // Erros silenciosamente ignorados
  }
}

module.exports = { verificarBots };